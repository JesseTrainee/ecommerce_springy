services:
  # Serviço PHP (Aplicação Springy)
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        user: springy
        uid: 1000
    container_name: springy-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
    networks:
      - springy-network
    depends_on:
      - mysql
      - redis

  # Servidor Web Nginx
  nginx:
    image: nginx:1.21-alpine
    container_name: springy-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/etc/nginx/ssl
    networks:
      - springy-network
    depends_on:
      - app

  # Banco de Dados MySQL
  mysql:
    image: mysql:8.0
    container_name: springy-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_USER: ${DB_USER}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - springy-mysql-data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - springy-network
    ports:
      - "3306:3306"

  # Serviço Redis para Cache
  redis:
    image: redis:6-alpine
    container_name: springy-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - springy-redis-data:/data
    networks:
      - springy-network
    ports:
      - "6379:6379"

  # Serviço phpMyAdmin (opcional)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: springy-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "8080:80"
    networks:
      - springy-network
    depends_on:
      - mysql

networks:
  springy-network:
    driver: bridge

volumes:
  springy-mysql-data:
    driver: local
  springy-redis-data:
    driver: local